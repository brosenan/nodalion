'/bootstrap':signature(localStore(State)::state,[State::'/bootstrap':list('/Functional':pairType('/bootstrap':string,'/impred':localStoreVal))]).
'/util':behavior(localStore(State)::state,!'should support a set operation', (transition(localStore([]),'/impred':localSet(K,V),_,'/impred':localStoreVal,localStore(State)),'/util':assertEqual(State,['/Functional':pair(K,V)],'/bootstrap':list('/Functional':pairType('/bootstrap':string,'/impred':localStoreVal))))).
def(localStore(State),seq(trans('/impred':localSet(Key,Val),_,'/impred':localStoreVal),localStore(['/Functional':pair(Key,Val)|State]))).
'/util':behavior(localStore(State)::state,!'should support a get operation', (transition(localStore(['/Functional':pair(!foo,'/impred':localStr(!bar)),'/Functional':pair(!bar,'/impred':localStr(!baz))]),'/impred':localGet(!bar),Baz,'/impred':localStoreVal,localStore(S)),'/util':assertEqual(Baz,'/impred':localStr(!baz),'/impred':localStoreVal))).
def(localStore(State),seq(guarded(trans('/impred':localGet(Key),Val,'/impred':localStoreVal),'/bootstrap':listMember('/Functional':pair(Key,Val),'/Functional':pairType('/bootstrap':string,'/impred':localStoreVal),State)),localStore(_))).
'/bootstrap':signature(fetch(State,Key,Val)::'/bootstrap':pred,[State::'/bootstrap':list('/Functional':pairType('/bootstrap':string,'/impred':localStoreVal)),Key::'/bootstrap':string,Val::'/impred':localStoreVal]).
fetch(['/Functional':pair(KeyPrime,ValPrime)|Rest],Key,Val):-builtin:if(Key::'/bootstrap':string=KeyPrime::'/bootstrap':string,Val::'/impred':localStoreVal=ValPrime::'/impred':localStoreVal,fetch(Rest,Key,Val)).
